http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=202980
2013-09-27  Xinliang David Li  <davidxl@google.com>

    * opts.c (finish_options): Adjust parameters
    according to vect cost model.
    (common_handle_option): Set dynamic vect cost
    model for FDO.
    targhooks.c (default_add_stmt_cost): Compute stmt cost
    unconditionally.
    * tree-vect-loop.c (vect_estimate_min_profitable_iters):
    Use helper function.
    * tree-vectorizer.h (unlimited_cost_model): New function.
    * tree-vect-slp.c (vect_slp_analyze_bb_1): Use helper function.
    * tree-vect-data-refs.c (vect_peeling_hash_insert): Use helper
    function.
    (vect_enhance_data_refs_alignment): Ditto.
    * flag-types.h: New enum.
    * common/config/i386/i386-common.c (ix86_option_init_struct):
    No need to initialize vect_cost_model flag.
    * config/i386/i386.c (ix86_add_stmt_cost): Compute stmt cost
    unconditionally.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=202229
2013-08-29  Xinliang David Li  <davidxl@google.com>

    * tree-vect-slp.c (destroy_bb_vec_info): Data ref cleanup.
    * tree-vect-loop.c (destroy_bb_vec_info): Ditto.
    * tree-vect-data-refs.c (vect_compute_data_ref_alignment):
    Delay base decl alignment adjustment.
    * tree-vectorizer.c (vect_destroy_datarefs): New function.
    * tree-vectorizer.h: New data structure.
    (set_dr_misalignment): New function.
    (dr_misalignment): Ditto.
    * tree-vect-stmts.c (vectorizable_store): Ensure alignment.
    (vectorizable_load): Ditto.
    (ensure_base_align): New function.
    (vectorize_loops): Add dbg_cnt support.
    (execute_vect_slp): Ditto.
    * dbgcnt.def: New debug counter.
    * Makefile: New dependency.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=202088
2013-08-29  Xinliang David Li  <davidxl@google.com>

    * loop-unroll.c (report_unroll_peel): Minor message
    change.
    * tree-vect-loop-manip.c (vect_do_peeling_for_alignment):
    Emit alignment peeling message with default -fopt-info.
    (vect_loop_versioning): Emit loop version info message.
    * tree-vectorizer.c (vectorize_loops): Minor message
    change.
    (execute_vect_slp): Ditto.
    * gcc.dg/unroll_3.c: Message change.
    * gcc.dg/unroll_4.c: Likewise.
    * gcc.dg/tree-ssa/cunroll-1.c: Likewise.
    * gcc.dg/tree-ssa/cunroll-2.c: Likewise.
    * gcc.dg/tree-ssa/cunroll-3.c: Likewise.
    * gcc.dg/tree-ssa/cunroll-4.c: Likewise.
    * gcc.dg/tree-ssa/cunroll-5.c: Likewise.
    * gcc.dg/tree-ssa/loop-23.c: Likewise.
    * gcc.dg/tree-ssa/loop-1.c: Likewise.
    * gcc.dg/unroll_1.c: Likewise.
    * gcc.dg/vect/bb-slp-31.c: Likewise.
    * gcc.dg/vect/bb-slp-14.c: Likewise.
    * gcc.dg/vect/bb-slp-8.c: Likewise.
    * gcc.dg/vect/bb-slp-23.c: Likewise.
    * gcc.dg/vect/bb-slp-15.c: Likewise.
    * gcc.dg/vect/bb-slp-9.c: Likewise.
    * gcc.dg/vect/bb-slp-24.c: Likewise.
    * gcc.dg/vect/bb-slp-16.c: Likewise.
    * gcc.dg/vect/bb-slp-25.c: Likewise.
    * gcc.dg/vect/bb-slp-17.c: Likewise.
    * gcc.dg/vect/bb-slp-26.c: Likewise.
    * gcc.dg/vect/bb-slp-18.c: Likewise.
    * gcc.dg/vect/no-tree-reassoc-bb-slp-12.c: Likewise.
    * gcc.dg/vect/bb-slp-27.c: Likewise.
    * gcc.dg/vect/bb-slp-19.c: Likewise.
    * gcc.dg/vect/bb-slp-28.c: Likewise.
    * gcc.dg/vect/bb-slp-cond-1.c: Likewise.
    * gcc.dg/vect/bb-slp-29.c: Likewise.
    * gcc.dg/vect/bb-slp-8a.c: Likewise.
    * gcc.dg/vect/bb-slp-pattern-2.c: Likewise.
    * gcc.dg/vect/bb-slp-1.c: Likewise.
    * gcc.dg/vect/bb-slp-8b.c: Likewise.
    * gcc.dg/vect/bb-slp-2.c: Likewise.
    * gcc.dg/vect/bb-slp-3.c: Likewise.
    * gcc.dg/vect/bb-slp-10.c: Likewise.
    * gcc.dg/vect/fast-math-bb-slp-call-1.c: Likewise.
    * gcc.dg/vect/bb-slp-4.c: Likewise.
    * gcc.dg/vect/bb-slp-11.c: Likewise.
    * gcc.dg/vect/fast-math-bb-slp-call-2.c: Likewise.
    * gcc.dg/vect/bb-slp-5.c: Likewise.
    * gcc.dg/vect/bb-slp-20.c: Likewise.
    * gcc.dg/vect/bb-slp-6.c: Likewise.
    * gcc.dg/vect/bb-slp-21.c: Likewise.
    * gcc.dg/vect/bb-slp-30.c: Likewise.
    * gcc.dg/vect/bb-slp-13.c: Likewise.
    * gcc.dg/vect/bb-slp-7.c: Likewise.
    * gcc.dg/vect/bb-slp-22.c: Likewise.
    * gcc.dg/unroll_2.c: Likewise.
    * g++.dg/vect/slp-pr50413.cc: Likewise.
    * g++.dg/vect/slp-pr56812.cc: Likewise.
    * g++.dg/vect/slp-pr50819.cc: Likewise.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=202049
2013-08-28  Jakub Jelinek  <jakub@redhat.com>

    PR middle-end/58257
    * omp-low.c (copy_var_decl): Copy over TREE_NO_WARNING flag.
    PR middle-end/58257
    * c-c++-common/gomp/pr58257.c: New test.

http://gcc.gnu.org/viewcvs/gcc?view=revision&revision=205720
2013-12-05  Jason Merrill  <jason@redhat.com>

	PR c++/59044
	PR c++/59052
	* pt.c (most_specialized_class): Use the partially instantiated
	template for deduction.  Drop the TMPL parameter.

http://gcc.gnu.org/viewcvs?rev=203874&root=gcc&view=rev
2013-10-20  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <paolo.carlini@oracle.com>

	PR libstdc++/58800
	* include/bits/stl_algo.h (__unguarded_partition_pivot): Change
	__last - 2 to __last - 1.
	* testsuite/25_algorithms/nth_element/58800.cc: New

http://gcc.gnu.org/viewcvs/gcc?view=revision&revision=204203
2013-10-30  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
	PR target/58854
	* config/arm/arm.c (arm_expand_epilogue_apcs_frame): Emit blockage.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201780
2013-08-16  Jakub Jelinek  <jakub@redhat.com>

    PR tree-optimization/58165
    * tree-call-cdce.c (shrink_wrap_one_built_in_call): If
    bi_call must be the last stmt in a bb, don't split_block, instead
    use fallthru edge from it and give up if there is none.
    Release conds vector when returning early.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201574
2013-08-07  Eric Botcazou  <ebotcazou@adacore.com>

    * diagnostic.c (diagnostic_classify_diagnostic): Accept zero index and
    document its semantics.
    (diagnostic_report_diagnostic): Adjust accordingly.
    * gnat.dg/warn9.adb: New test.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201467
2013-08-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>

    * pretty-print.h (pp_underscore): New.
    (pp_comma): Tidy.
    * gimple-pretty-print.c (dump_unary_rhs): Use specialized pretty
    printer functions instead of pp_character.
    (dump_binary_rhs): Likewise.
    (dump_ternary_rhs): Likewise.
    (dump_gimple_call_args): Likewise.
    (pp_points_to_solution): Likewise.
    (dump_gimple_call): Likewise.
    (dump_gimple_switch): Likewise.
    (dump_gimple_cond): Likewise.
    (dump_gimple_bind): Likewise.
    (dump_gimple_try): Likewise.
    (dump_gimple_omp_for): Likewise.
    (dump_gimple_omp_continue): Likewise.
    (dump_gimple_omp_single): Likewise.
    (dump_gimple_omp_sections): Likewise.
    (dump_gimple_omp_block): Likewise.
    (dump_gimple_omp_critical): Likewise.
    (dump_gimple_transaction): Likewise.
    (dump_gimple_asm): Likewise.
    (dump_gimple_phi): Likewise.
    (dump_gimple_omp_parallel): Likewise.
    (dump_gimple_omp_task): Likewise.
    (dump_gimple_omp_atomic_load): Likewise.
    (dump_gimple_omp_atomic_store): Likewise.
    (dump_gimple_mem_ops): Likewise.
    (pp_gimple_stmt_1): Likewise.
    (pp_cfg_jump): Likewise.
    (dump_implicit_edges): Likewise.
    (gimple_dump_bb_for_graph): Likewise.
    * graph.c (draw_cfg_node): Likewise.
    * langhooks.c (lhd_print_error_function): Likewise.
    * sched-vis.c (print_exp): Likewise.
    (print_value): Likewise.
    (print_pattern): Likewise.
    (print_insn): Likewise.
    (rtl_dump_bb_for_graph): Likewise.
    * tree-pretty-print.c (dump_function_declaration): Likewise.
    (dump_array_domain): Likewise.
    (dump_omp_clause): Likewise.
    (dump_location): Likewise.
    (dump_generic_node): Likewise.
    (print_struct_decl): Likewise.
    * diagnostic.c (diagnostic_show_locus): Use pp_space.
    * c-ada-spec.c (print_ada_macros): Use specialized pretty printer
    functions instead of pp_character.
    (pp_ada_tree_identifier): Likewise.
    (dump_ada_double_name): Likewise.
    (dump_ada_function_declaration): Likewise.
    (dump_ada_array_domains): Likewise.
    (dump_template_types): Likewise.
    (dump_generic_ada_node): Likewise.
    (print_ada_declaration): Likewise.
    (print_ada_struct_decl): Likewise.
    * c-pretty-print.c (pp_c_integer_constant): Likewise.
    * error.c (dump_aggr_type): Use specialized pretty printer
    functions instead of pp_character.
    (dump_type_prefix): Likewise.
    (dump_simple_decl): Likewise.
    (type_to_string): Likewise.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=199620
2013-06-03  Teresa Johnson  <tejohnson@google.com>

    * dumpfile.c (opt_info_switch_p): Change -fopt-info
    default to -fopt-info=optimized instead of all.
    * doc/invoke.texi: Ditto.
    * tree-vectorizer.c (vectorize_loops): Emit loop vectorization
    success under MSG_OPTIMIZED_LOCATIONS, and use dump_printf_loc.
    (execute_vect_slp): Emit BB vectorization success under
    MSG_OPTIMIZED_LOCATIONS.
    * tree-vect-slp.c (vect_slp_transform_bb): Change
    MSG_OPTIMIZED_LOCATIONS to MSG_NOTE.
    * tree-vect-loop.c (vect_transform_loop): Ditto.
    * gcc.dg/vect/bb-slp-31.c: Update vect dump message.
    * gcc.dg/vect/bb-slp-14.c: Ditto.
    * gcc.dg/vect/fast-math-bb-slp-call-1.c: Ditto.
    * gcc.dg/vect/bb-slp-23.c: Ditto.
    * gcc.dg/vect/bb-slp-15.c: Ditto.
    * gcc.dg/vect/fast-math-bb-slp-call-2.c: Ditto.
    * gcc.dg/vect/bb-slp-24.c: Ditto.
    * gcc.dg/vect/bb-slp-16.c: Ditto.
    * gcc.dg/vect/bb-slp-25.c: Ditto.
    * gcc.dg/vect/bb-slp-pattern-2.c: Ditto.
    * gcc.dg/vect/bb-slp-17.c: Ditto.
    * gcc.dg/vect/bb-slp-1.c: Ditto.
    * gcc.dg/vect/bb-slp-26.c: Ditto.
    * gcc.dg/vect/bb-slp-18.c: Ditto.
    * gcc.dg/vect/bb-slp-2.c: Ditto.
    * gcc.dg/vect/no-tree-reassoc-bb-slp-12.c: Ditto.
    * gcc.dg/vect/bb-slp-27.c: Ditto.
    * gcc.dg/vect/bb-slp-19.c: Ditto.
    * gcc.dg/vect/bb-slp-3.c: Ditto.
    * gcc.dg/vect/bb-slp-28.c: Ditto.
    * gcc.dg/vect/bb-slp-4.c: Ditto.
    * gcc.dg/vect/bb-slp-29.c: Ditto.
    * gcc.dg/vect/bb-slp-5.c: Ditto.
    * gcc.dg/vect/bb-slp-6.c: Ditto.
    * gcc.dg/vect/bb-slp-8a.c: Ditto.
    * gcc.dg/vect/bb-slp-7.c: Ditto.
    * gcc.dg/vect/bb-slp-8b.c: Ditto.
    * gcc.dg/vect/bb-slp-8.c: Ditto.
    * gcc.dg/vect/bb-slp-9.c: Ditto.
    * gcc.dg/vect/bb-slp-10.c: Ditto.
    * gcc.dg/vect/bb-slp-11.c: Ditto.
    * gcc.dg/vect/bb-slp-20.c: Ditto.
    * gcc.dg/vect/bb-slp-cond-1.c: Ditto.
    * gcc.dg/vect/bb-slp-21.c: Ditto.
    * gcc.dg/vect/bb-slp-30.c: Ditto.
    * gcc.dg/vect/bb-slp-13.c: Ditto.
    * gcc.dg/vect/bb-slp-22.c: Ditto.
    * g++.dg/vect/slp-pr50413.cc: Ditto.
    * g++.dg/vect/slp-pr56812.cc: Ditto.
    * g++.dg/vect/slp-pr50819.cc: Ditto.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=199606
2013-06-03  Christophe Lyon  <christophe.lyon@linaro.org>

    * sanitizer_common/sanitizer_linux.cc (MemoryMappingLayout::Next):
    Cherry pick upstream r182922.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=199359
2013-05-27  Richard Biener  <rguenther@suse.de>

    PR middle-end/57412
    * omp-low.c (expand_omp_atomic_pipeline): Use the correct latch
    block for the new loop.
    PR middle-end/57412
    * gcc.dg/gomp/pr57412.c: New testcase.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198927
2013-05-15  Richard Biener  <rguenther@suse.de>

    * tree-vect-loop.c (vect_transform_loop): Use MSG_NOTE instead
    of MSG_OPTIMIZED_LOCATIONS.
    * tree-vect-slp.c (vect_make_slp_decision): Likewise.
    (vect_slp_transform_bb): Indicate location in MSG_OPTIMIZED_LOCATIONS
    message.
    * tree-vectorizer.c (vectorize_loops): Use MSG_NOTE instead
    of MSG_OPTIMIZED_LOCATIONS.
    (execute_vect_slp): Likewise.
    * tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound): Likewise.
    (vect_create_cond_for_alias_checks): Likewise.
    * tree-vect-patterns.c (vect_recog_dot_prod_pattern): Likewise.
    (vect_recog_widen_mult_pattern): Likewise.
    (vect_recog_widen_sum_pattern): Likewise.
    (vect_recog_over_widening_pattern): Likewise.
    (vect_recog_widen_shift_pattern): Likewise.
    (vect_recog_vector_vector_shift_pattern): Likewise.
    (vect_recog_divmod_pattern): Likewise.
    (vect_recog_mixed_size_cond_pattern): Likewise.
    (vect_recog_bool_pattern): Likewise.
    (vect_pattern_recog_1): Likewise.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198900
2013-05-14  Jakub Jelinek  <jakub@redhat.com>

    * tree.c (warn_deprecated_use): Print file:line using locus color.
    * diagnostic.c (diagnostic_report_current_module): Print file:line
    and file:line:column using locus color.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198736
2013-05-09  Jan Hubicka  <jh@suse.cz>

    PR lto/54095
    * symtab.c (insert_to_assembler_name_hash): Handle clones.
    (unlink_from_assembler_name_hash): Likewise.
    (symtab_prevail_in_asm_name_hash, symtab_register_node,
    symtab_unregister_node, symtab_initialize_asm_name_hash,
    change_decl_assembler_name): Update.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198683
2013-05-07  Christophe Lyon  <christophe.lyon@linaro.org>

    * config/arm/arm.c (arm_asan_shadow_offset): New function.
    (TARGET_ASAN_SHADOW_OFFSET): Define.
    * config/arm/linux-eabi.h (ASAN_CC1_SPEC): Define.
    (LINUX_OR_ANDROID_CC): Add ASAN_CC1_SPEC.
    * lib/target-supports.exp (check_effective_target_hw): New
    function.
    * c-c++-common/asan/clone-test-1.c: Call
    check_effective_target_hw.
    * c-c++-common/asan/rlimit-mmap-test-1.c: Likewise.
    * c-c++-common/asan/heap-overflow-1.c: Update regexps to accept
    possible decorations.
    * c-c++-common/asan/null-deref-1.c: Likewise.
    * c-c++-common/asan/stack-overflow-1.c: Likewise.
    * c-c++-common/asan/strncpy-overflow-1.c: Likewise.
    * c-c++-common/asan/use-after-free-1.c: Likewise.
    * g++.dg/asan/deep-thread-stack-1.C: Likewise.
    * g++.dg/asan/large-func-test-1.C: Likewise.
    * configure.tgt: Add ARM pattern.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198409
2013-04-29  Richard Biener  <rguenther@suse.de>

    PR middle-end/57089
    * omp-low.c (expand_omp_taskreg): If the parent function had
    a broken loop tree make sure to schedule a fixup for the child
    as well.
    (expand_omp_for_generic): Properly add loops.
    (expand_omp_for_static_nochunk): Likewise.
    (expand_omp_for_static_chunk): Likewise.
    (expand_omp_for): For the degenerate case fixup loops.
    (expand_omp_sections): Fix default bb placement in loops.
    (expand_omp_atomic_pipeline): Properly add loops.
    PR middle-end/57089
    * gfortran.dg/gomp/pr57089.f90: New testcase.

http://gcc.gnu.org/viewcvs?root=gcc&view=rev&rev=198333
2013-04-26  Richard Biener  <rguenther@suse.de>

    * tree-cfg.c (execute_build_cfg): Build the loop tree.
    (pass_build_cfg): Provide PROP_loops.
    (move_sese_region_to_fn): Remove loops that are outlined into fn
    for now.
    * tree-inline.c: Include cfgloop.h.
    (initialize_cfun): Do not drop PROP_loops.
    (copy_loops): New function.
    (copy_cfg_body): Copy loop structure.
    (tree_function_versioning): Initialize destination loop tree.
    * tree-ssa-loop.c (pass_tree_loop_init): Do not provide PROP_loops.
    (pass_parallelize_loops): Do IL verification.
    * loop-init.c (loop_optimizer_init): Fixup loops if required.
    * tree-optimize.c (execute_fixup_cfg): If we need to cleanup
    the CFG make sure we fixup loops as well.
    * tree-ssa-tail-merge.c: Include cfgloop.h.
    (replace_block_by): When merging loop latches mark loops for fixup.
    * lto-streamer-out.c (output_struct_function_base): Drop
    PROP_loops for now.
    * tree-ssa-phiopt.c: Include tree-scalar-evolution.h.
    (tree_ssa_cs_elim): Initialize the loop optimizer and SCEV.
    * ipa-split.c: Include cfgloop.h.
    (split_function): Add the new return block to the loop tree root.
    * tree-cfgcleanup.c (remove_forwarder_block_with_phi): Return
    whether we have removed the forwarder block.
    (merge_phi_nodes): If we removed a forwarder mark loops for fixup.
    * cfgloop.h (place_new_loop): Declare.
    * cfgloopmanip.c (place_new_loop): Export.
    * Makefile.in (asan.o): Add $(CFGLOOP_H) dependency.
    (tree-switch-conversion.o): Likewise.
    (tree-complex.o): Likewise.
    (tree-inline.o): Likewise.
    (tree-ssa-tailmerge.o): Likewise.
    (ipa-split.o): Likewise.
    (tree-ssa-phiopt.o): Add $(SCEV_H) dependency.
    (tree-ssa-copy.o): Likewise.
    * tree-switch-conversion.c: Include cfgloop.h
    (process_switch): If we emit a bit-test cascade, schedule loops
    for fixup.
    * tree-complex.c: Include cfgloop.h.
    (expand_complex_div_wide): Properly add new basic-blocks to loops.
    * asan.c: Include cfgloop.h.
    (create_cond_insert_point): Properly add new basic-blocks to
    loops, schedule loop fixup.
    * cfgloop.c (verify_loop_structure): Check that looks are not
    marked for fixup.
    * omp-low.c (expand_parallel_call): Properly add new basic-blocks
    to loops.
    (expand_omp_for_generic): Likewise.
    (expand_omp_sections): Likewise.
    (expand_omp_atomic_pipeline): Schedule loops for fixup.
    * tree-ssa-copy.c: Include tree-scalar-evolution.h.
    (fini_copy_prop): Disable DCE in substitute_and_fold if SCEV
    is initialized, not when loops are present.
    * tree-parloops.c (parallelize_loops): Remove checking here.
    * passes.c (init_optimization_passes): Schedule a copy-propagation
    pass before complete unrolling of inner loops.
    * gcc.dg/tree-prof/update-loopch.c: Revert last change.
    * gcc.dg/graphite/pr33766.c: Fix undefined behavior.
    * gcc.dg/pr53265.c: Remove XFAILs.
    * gcc.dg/tree-ssa/loop-38.c: Remove unreliable dump scanning.
    * gcc.dg/tree-ssa/pr21559.c: Change back to two expected jump threads.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198332
2013-04-26  Jakub Jelinek  <jakub@redhat.com>

    * Makefile.in (toplev.o): Depend on diagnostic-color.h.
    * diagnostic-color.c (should_colorize): Remove _WIN32 version.
    (colorize_init): Add argument to _WIN32 version.
    * toplev.c: Include diagnostic-color.h.
    (process_options): Default to -fdiagnostics-color=auto if
    GCC_COLORS env var is in the environment.
    * common.opt (fdiagnostics-color=): Add Var and Init.
    * doc/invoke.texi (-fdiagnostics-color=): Document that if
    GCC_COLORS env var is in the environment, the default is auto
    rather than never.
    * diagnostic.h (file_name_as_prefix): Add context argument.
    * diagnostic.c (file_name_as_prefix): Likewise.  Colorize
    the string as locus.
    * langhooks.c (lhd_print_error_function): Adjust caller.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198331
2013-04-26  Jakub Jelinek  <jakub@redhat.com>

    * diagnostic.h (file_name_as_prefix): Add context argument.
    * diagnostic.c (file_name_as_prefix): Likewise.  Colorize
    the string as locus.
    * langhooks.c (lhd_print_error_function): Adjust caller.
    * error.c (cp_print_error_function): Adjust file_name_as_prefix
    caller.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198174
2013-04-22  Andi Kleen  <ak@linux.intel.com>

    * lto/lto.c (print_lto_report_1): Fix LTO report names.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198173
2013-04-22  Andi Kleen  <ak@linux.intel.com>

    * lto/lto.c (print_lto_report_1): Declare early.
    (read_cgraph_and_symbols): Call print_lto_report_1 early.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198172
2013-04-22  Andi Kleen  <ak@linux.intel.com>

    * common.opt (-flto-report-wpa): Add.
    * doc/invoke.texi (-flto-report-wpa): Add.
    * lto/lto.c (do_whole_program_analysis): Check for lto-report-wpa.
    (lto_main): dito.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=197841
http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=197842
2013-04-12  Manuel López-Ibáñez  <manu@gcc.gnu.org>
            Jakub Jelinek  <jakub@redhat.com>

    * opts.c: Include diagnostic-color.h.
    (common_handle_option): Handle OPT_fdiagnostics_color_.
    * Makefile.in (OBJS-libcommon): Add diagnostic-color.o.
    (diagnostic.o, opts.o, pretty-print.o): Depend on diagnostic-color.h.
    (diagnostic-color.o): New.
    * common.opt (fdiagnostics-color, fdiagnostics-color=): New options.
    (diagnostic_color_rule): New enum.
    * dwarf2out.c (gen_producer_string): Don't print -fdiagnostics-color*.
    * langhooks.c (lhd_print_error_function): Add %r "locus" and %R around
    the location string.
    * diagnostic.def: Add 3rd argument to DEFINE_DIAGNOSTIC_KIND macros,
    either NULL, or color kind.
    * diagnostic-color.c: New file.
    * diagnostic-color.h: New file.
    * diagnostic-core.h (DEFINE_DIAGNOSTIC_KIND): Adjust macro for 3
    arguments.
    * doc/invoke.texi (-fdiagnostics-color): Document.
    * pretty-print.h (pp_show_color): Define.
    (struct pretty_print_info): Add show_color field.
    * diagnostic.c: Include diagnostic-color.h.
    (diagnostic_build_prefix): Adjust for 3 argument DEFINE_DIAGNOSTIC_KIND
    macros.  Colorize error:, warning: etc. strings and also the location
    string.
    (diagnostic_show_locus): Colorize the caret line.
    * pretty-print.c: Include diagnostic-color.h.
    (pp_base_format): Handle %r and %R format specifiers.  Colorize strings
    inside of %< %> quotes or quoted through q format modifier.

http://gcc.gnu.org/viewcvs?root=gcc&view=rev&rev=197671
2013-04-10  Richard Biener  <rguenther@suse.de>

    * passes.c (execute_todo): Do not call ggc_collect conditional here.
    (execute_one_ipa_transform_pass): But unconditionally here.
    (execute_one_pass): And here.
    (init_optimization_passes): Remove reload pass.
    * tree-pass.h (TODO_ggc_collect): Remove.
    (pass_reload): Likewise.
    * ira.c (do_reload): Merge into ...
    (ira): ... this.
    (rest_of_handle_reload): Remove.
    (pass_reload): Likewise.
    * config/i386/i386.c (ix86_option_override): Refer to ira instead
    of reload for vzeroupper pass placement.
    * <everywhere>: Remove TODO_ggc_collect from todo_flags_start
    and todo_flags_finish of all passes.
    * g++.dg/pr55604.C: Use -fdump-rtl-ira.

http://gcc.gnu.org/viewcvs?root=gcc&view=rev&rev=196770
2013-03-18  Richard Biener  <rguenther@suse.de>

    * tree-ssa-loop-manip.c (find_uses_to_rename): Do not scan the
    whole function when there is nothing to do.
    * tree-ssa-loop.c (pass_vectorize): Remove TODO_update_ssa.
    * tree-vectorizer.c (vectorize_loops): Update virtual and
    loop-closed SSA once.
    * tree-vect-loop.c (vect_transform_loop): Do not update SSA here.

http://gcc.gnu.org/viewcvs?root=gcc&view=rev&rev=191571
2012-09-17  Jakub Jelinek  <jakub@redhat.com>

    PR tree-optimization/54563
    * tree-ssa-math-opts.c (execute_cse_sincos): Call
    gimple_purge_dead_eh_edges if last call has been changed.

    * g++.dg/torture/pr54563.C: New test.

http://gcc.gnu.org/viewcvs?view=revision&revision=193554
2012-11-16  Jakub Jelinek  <jakub@redhat.com>

    PR target/54073
    * config/i386/i386.md (mov<mode>cc): Use comparison_operator
    instead of ordered_comparison_operator resp.
    ix86_fp_comparison_operator predicates.
    * config/i386/i386.c (ix86_expand_fp_movcc): Reject TImode
    or for -m32 DImode comparisons.

http://gcc.gnu.org/viewcvs?view=revision&revision=193825
2012-11-26  Diego Novillo  <dnovillo@google.com>

    * gimplify.c: Work around for PR 55245.

http://gcc.gnu.org/viewcvs?view=revision&revision=186451
2012-04-14  Tom de Vries  <tom@codesourcery.com>

    * cfgcleanup.c (try_optimize_cfg): Replace call to delete_insn_chain by
    call to delete_insn.  Remove code to reorder BASIC_BLOCK note and
    DELETED_LABEL note, and move it to ...
    * cfgrtl.c (delete_insn): ... here.  Change return type to void.
    (delete_insn_and_edges): Likewise.
    (delete_insn_chain): Handle new return type of delete_insn.  Delete
    chain backwards rather than forwards.
    * rtl.h (delete_insn, delete_insn_and_edges): Change return type to
    void.
    * cfglayout.c (fixup_reorder_chain): Delete unused label.

2013-01-03  Jason Merrill  <jason@redhat.com>
    PR c++/55856
    * semantics.c (build_data_member_initialization): Handle DECL_EXPR.
